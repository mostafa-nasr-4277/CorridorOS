apiVersion: v1
kind: Namespace
metadata: { name: corridor-system }
---
apiVersion: v1
kind: ServiceAccount
metadata: { name: corridor-operator, namespace: corridor-system }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: { name: corridor-operator }
rules:
- apiGroups: ["corridoros.io"]
  resources: ["corridors","memorybundles","attestationpolicies"]
  verbs: ["get","list","watch","create","update","patch","delete"]
- apiGroups: [""]
  resources: ["pods","events","configmaps","secrets"]
  verbs: ["get","list","watch","update","patch","create"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: { name: corridor-operator }
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: corridor-operator
subjects:
- kind: ServiceAccount
  name: corridor-operator
  namespace: corridor-system
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: corridor-operator, namespace: corridor-system, labels: {app: corridor-operator} }
spec:
  replicas: 1
  selector: { matchLabels: {app: corridor-operator} }
  template:
    metadata: { labels: {app: corridor-operator} }
    spec:
      serviceAccountName: corridor-operator
      containers:
      - name: operator
        image: ghcr.io/corridoros/operator:dev
        imagePullPolicy: IfNotPresent
        env:
        - { name: CORRD_URL, value: "http://corrd.corridor-system.svc:7080" }
        - { name: MEMQOSD_URL, value: "http://memqosd.corridor-system.svc:7070" }
        - { name: ATTEST_URL, value: "http://attestd.corridor-system.svc:7090" }
        resources:
          requests: { cpu: "100m", memory: "128Mi" }
          limits:   { cpu: "500m", memory: "512Mi" }
